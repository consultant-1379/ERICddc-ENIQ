FIND="/usr/bin/find"
AWK="/usr/bin/awk"
CAT="/usr/bin/cat"
CUT="/usr/bin/cut"
ECHO="/usr/bin/echo"
GREP="/usr/bin/grep"
MKDIR="/usr/bin/mkdir"
SED="/usr/bin/sed"
SU="/usr/bin/su"
RM="/usr/bin/rm"
TR="/usr/bin/tr"
LS="/usr/bin/ls"
TAIL="/usr/bin/tail"
EGREP="/usr/bin/egrep"
HEAD="/usr/bin/head"
NAWK="/usr/bin/nawk"
WC="/usr/bin/wc"
EXPR="/usr/bin/expr"
ERIC_STORAGE_ETC_DIR="/ericsson/storage/san/plugins/unity/etc"
ERIC_STORAGE_LIB_DIR="/ericsson/storage/san/plugins/unity/lib"
ENIQ_MONITOR_DIR="/opt/ericsson/ERICddc/monitor/appl/ENIQ"


progress() {
    if [ ! -z "${DEBUG}" ] || [ "${HAVE_TTY}" = "true" ] ; then
        echo "* $*"
    fi
}

log() {
    echo "$(date "+%Y-%m-%d %H:%M:%S"): $*"
}

warn() {
    log "WARNING: $*"
}

die() {
    echo "ERROR: $*"
    exit 1
}
# HL87971: Check the /eniq/log filesystem is mounted before progression is allowed
$_MOUNT | $_GREP "/eniq/log" > /dev/null 2>&1
# Only worry about this if we aren't trying to remove the package
ls /eniq/log > /dev/null 2>&1
MOUNT_RETVAL=$?
if [ ${MOUNT_RETVAL} -ne 0 ] && [ "${SCRIPT_NAME}" != "uninstall" ] && [ "${SCRIPT_NAME}" != "install" ] ; then
    $_ECHO "ENIQ log filesystem is not mounted, cannot continue"
    exit 1
elif [ ${MOUNT_RETVAL} -ne 0 ] && [ "${SCRIPT_NAME}" = "install" ] ; then
    # We are installed before any ENIQ-specific filesystems are mounted, so we need to
    # log to another location temporarily. The default location is /var/tmp/ddc_data and
    # will get set in ../global.env, so we'll just make sure this variable
    # stays empty for now...
    DATAROOT=
else
    # ENIQ log filesystem is mounted and we are good to go...
    # TODO: Check the /var/tmp/ddc_data dir does not need to be copied over
    # and / or removed
    DATAROOT=/eniq/log/ddc_data
    SITEDATAROOT=/eniq/log/ddc_data
fi

# Are we running on ENIQ Events - if so, identify what
# services are running on this node and define a new DATAROOT
THISHOST=$($_HOSTNAME)

ENIQ_SERVER_TYPE=""
SERVER_TYPE_FILE="/eniq/installation/config/installed_server_type"
if [ -f ${SERVER_TYPE_FILE} ] ; then
    ENIQ_SERVER_TYPE=$($_CAT ${SERVER_TYPE_FILE})
fi

READER_SERVER_TYPE=""
READER_TYPE_FILE="/eniq/installation/config/install_reader_type"
if [ -f ${READER_TYPE_FILE} ] ; then
   READER_SERVER_TYPE=$($_CAT ${READER_TYPE_FILE})
fi

SYB_COLLECTOR=0
ENIQ_MASTER=0

# If the SERVER_TYPE_FILE does not exist, or SERVER
if [ -z "${ENIQ_SERVER_TYPE}" ] ; then
    ENIQ_SERVER_TYPE="eniq_undefined"
    DATAROOT=${DATAROOT}/${THISHOST}
    SYB_COLLECTOR=1
    ENIQ_MASTER=1
else
    # We are running on ENIQ Events - separate data directory per host
    BASE_DATAROOT=${DATAROOT}
    DATAROOT=${DATAROOT}/${THISHOST}
    # which blade are we running on?
    case "${ENIQ_SERVER_TYPE}" in
        "eniq_events")
        # standalone system
        SYB_COLLECTOR=1
        ENIQ_MASTER=1
        ;;
        "eniq_coordinator")
        # Coordinator server - may be running Mediation Server as well in medium deployment
        ENIQ_MASTER=1
        SYB_COLLECTOR=1
        ;;
        "son_coordinator")
        # Son CoOrdinator server
        SYB_COLLECTOR=1
        ENIQ_MASTER=1
        ;;
        "eniq_mz")
        # Mediation Server
        SYB_COLLECTOR=1
        ;;
        "eniq_cep")
        # CEP Mediation Server
        SYB_COLLECTOR=1
        ;;
        "eniq_ui")
        # Presentation Server
        SYB_COLLECTOR=1
        ;;
        "eniq_es")
        # LTE Event Statistics Server
        SYB_COLLECTOR=1
        ;;
        "eniq_iqr")
        # Reader Server
        SYB_COLLECTOR=1
        ;;
        "eniq_iqw")
        # Writer server
        ENIQ_MASTER=1
        SYB_COLLECTOR=1
        ;;
        # ENIQ STATS - Single Blade Deployment
        "eniq_stats")
        ENIQ_MASTER=1
        SYB_COLLECTOR=1
        ;;
        # ENIQ STATS - Multi Blade Deployment
        "stats_coordinator")
        # Co-ordinator server
        ENIQ_MASTER=1
        SYB_COLLECTOR=1
        ;;
        "stats_engine")
        # Writer server
        SYB_COLLECTOR=1
        ;;
        "stats_iqr")
        # IQR server
        SYB_COLLECTOR=1
        ;;
        *)
        $_ECHO "Unknown Events server type: ${ENIQ_SERVER_TYPE}"
        exit 1
        ;;
    esac
fi